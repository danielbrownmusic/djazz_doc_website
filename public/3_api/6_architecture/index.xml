<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>System Architecture :: Hugo Relearn Theme</title>
    <link>http://localhost:1313/3_api/6_architecture.html</link>
    <description>Because Djazz is beat-based, most objects are built to receive and process information at recurring instances.</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/3_api/6_architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>main components</title>
      <link>http://localhost:1313/3_api/6_architecture/component_descriptions/master_control.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/3_api/6_architecture/component_descriptions/master_control.html</guid>
      <description>Description of Components in Model:&#xA;Master Control Master Clock - outputs a beat number when it receives a bang - increments its beat number with each output, but also keeps track of position in a song form and adjusts the beat in accordance if looped.</description>
    </item>
    <item>
      <title>control flow</title>
      <link>http://localhost:1313/3_api/6_architecture/control_flow.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/3_api/6_architecture/control_flow.html</guid>
      <description>graph TB; A[Master Clock] B[Audio] C[MIDI] A--&gt;|tempo, beat number, label| B A--&gt;|tempo, beat number, label| C flowchart TB; gIn(( )) g1[Generator 1] g2[Generator 2] g3[Generator 3] g4[Generator 4] g5[Generator 5] mbPlayer[MIDI Beat Player] t1[MIDI\nTrack 1] t2[MIDI\nTrack 2] t3[MIDI\nTrack 3] t4[MIDI\nTrack 4] t5[MIDI\nTrack 5] gOut((( ))) gIn --&gt; g1 --&gt; mbPlayer gIn --&gt; g2 --&gt; mbPlayer gIn --&gt; g3 --&gt; mbPlayer gIn --&gt; g4 --&gt; mbPlayer gIn --&gt; g5 --&gt; mbPlayer mbPlayer --&gt; t1 --&gt; gOut mbPlayer --&gt; t2 --&gt; gOut mbPlayer --&gt; t3 --&gt; gOut mbPlayer --&gt; t4 --&gt; gOut mbPlayer --&gt; t5 --&gt; gOut Because Djazz is beat-based, most objects are built to receive and process information at recurring instances.</description>
    </item>
    <item>
      <title>Overview of MVVCC (Model-View-View Controller-View) Architecture</title>
      <link>http://localhost:1313/3_api/6_architecture/overview_of_mvcvc.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/3_api/6_architecture/overview_of_mvcvc.html</guid>
      <description>1. Architecture Model/Control/View Control/View MVC:&#xA;Djazz uses the Model-View-Control design pattern.</description>
    </item>
    <item>
      <title>Pattr usage</title>
      <link>http://localhost:1313/3_api/6_architecture/pattr_usage.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/3_api/6_architecture/pattr_usage.html</guid>
      <description>Input is passed to patchers two ways: synchronously and asynchronously, depending on the type of input data.</description>
    </item>
  </channel>
</rss>